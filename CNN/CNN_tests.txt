-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import numpy as np
from keras import models, layers, metrics, regularizers

import download_imgs

data_train = np.array(download_imgs.training_img_arr)
label_train = np.array(download_imgs.training_label_arr)
data_test = np.array(download_imgs.testing_img_arr)
label_test = np.array(download_imgs.testing_label_arr)

model = models.Sequential([])
model.add(layers.Conv2D(16, (5, 5), activation='relu', padding='same', input_shape=(128,128,3)))
model.add(layers.MaxPooling2D((2,2)))

model.add(layers.Conv2D(32, (3,3), activation='relu', padding='same'))
model.add(layers.Conv2D(32, (3,3), activation='relu',  padding='same'))
model.add(layers.MaxPooling2D((2,2)))

model.add(layers.Conv2D(64, (3,3), activation='relu', padding='same'))
model.add(layers.Conv2D(64, (3,3), activation='relu',  padding='same'))
model.add(layers.MaxPooling2D((2,2)))

model.add(layers.Conv2D(128, (3,3), activation='relu',  padding='same'))
model.add(layers.Conv2D(128, (3,3), activation='relu',  padding='same'))
model.add(layers.MaxPooling2D((2,2)))

model.add(layers.Flatten())
model.add(layers.Dense(128, activation='relu'))
#model.add(layers.Dense(64, activation='relu', kernel_regularizer=regularizers.L2(l2=0.01)))
model.add(layers.Dense(64, activation='relu'))
#model.add(layers.Dropout(0.4))
model.add(layers.Dense(2, activation='linear'))

print(model.summary())
model.compile(optimizer='adam', metrics= [metrics.RootMeanSquaredError(), 'accuracy'], loss = 'mse')
history = model.fit(data_train, label_train, epochs=20, validation_data=(data_test, label_test), batch_size=16)
loss, rmse, accuracy = model.evaluate(data_test, label_test)

print(f'Loss={loss}')
print(f'accuracy={accuracy}')
print(f'rmse={rmse}')

model.save("image_classifier_1.keras")
import pickle
with open('training_history_img_class_1.pkl', 'wb') as file:
    pickle.dump(history.history, file)

with open('training_history_img_class_1.pkl', 'rb') as file:
    loaded_history = pickle.load(file)
print(loaded_history)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
bez regu. bez dropout
batch_size 16
20 epok

WYNIK:
Loss=114.29773712158203
accuracy=0.8405520915985107
rmse=10.691012382507324

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
bez regu. dropout 0.2
batch_size 16
20 epok

Loss=162.54898071289062
accuracy=0.801047146320343
rmse=12.749469757080078

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
bez regu. dropout 0.3
batch_size 16
20 epok

Loss=191.46917724609375
accuracy=0.8210375905036926
rmse=13.837238311767578

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
bez regu. dropout 0.4
batch_size 16
20 epok

Loss=150.49655151367188
accuracy=0.8048548102378845
rmse=12.267704010009766

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
bez regu. dropout 0.5
batch_size 16
20 epok


Loss=127.46061706542969
accuracy=0.8357924818992615
rmse=11.28984546661377

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
regu 0.001 dropout 0
batch_size 16
20 epok


ZŁA SIEĆ NIE BRAĆ POD UWAGĘ
Loss=148.89950561523438
accuracy=0.8315088152885437
rmse=12.201315879821777

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
regu 0.01 dropout 0
batch_size 16
20 epok
learning_rate=0.0001

Loss=90.5256576538086
accuracy=0.8567348718643188
rmse=9.492202758789062

val acc: 0.8567348718643188], 
'val_loss':  90.52568054199219], 
'val_root_mean_squared_error':  9.492203712463379]}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
regu 0.1 dropout X
batch_size 16
20 epok
learning_rate=0.0001

ZŁA SIEĆ NIE BRAĆ POD UWAGĘ

Loss=106.91020202636719
accuracy=0.8524512052536011
rmse=10.140543937683105


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9. PARAMETRY:
filtry: 3x3 -> 3x3 -> ...
regu 0.01
batch_size 16
20 epok


Loss=99.32077026367188
accuracy=0.8415040373802185
rmse=9.94702434539795


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
regu X dropout X
batch_size 16
20 epok

to samo co 7

Loss=90.5256576538086
accuracy=0.8567348718643188
rmse=9.492202758789062


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11. PARAMETRY:
filtry: 5x5 -> 5x5 -> 3x3
regu 0.01
batch_size 16
20 epok
learning_rate=0.0001


Loss=101.46458435058594
accuracy=0.8543550968170166
rmse=10.05138111114502

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12. PARAMETRY:
filtry: 7x7 -> 5x5 -> 3x3
regu 0.01
batch_size 16
20 epok
learning_rate=0.0001

Loss=117.38292694091797
accuracy=0.8629224300384521
rmse=10.816213607788086

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13. PARAMETRY:
filtry: 7x7 -> 5x5 -> 5x5 -> 3x3 -> ...
regu 0.01
batch_size 16
20 epok
learning_rate=0.0001


Loss=117.38292694091797
accuracy=0.8629224300384521
rmse=10.816213607788086



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
regu X dropout X
batch_size 32
20 epok

Loss=96.09483337402344
accuracy=0.8614945411682129
rmse=9.776386260986328

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
regu X dropout X
batch_size 64
20 epok

Loss=111.58840942382812
accuracy=0.8510233163833618
rmse=10.530831336975098

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16. PARAMETRY:
filtry: 5x5 -> 3x3 -> ...
regu X dropout X
batch_size 128
20 epok

Loss=136.21148681640625
accuracy=0.84197998046875
rmse=11.637415885925293

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

18. PARAMETRY:
filtry: X
regu X dropout X
batch_size X
50 epok


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19. PARAMETRY:
filtry: X
regu X dropout X
batch_size X
100 epok
